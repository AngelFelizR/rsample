% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootci.R
\name{int_pctl}
\alias{int_pctl}
\alias{int_t}
\alias{int_bca}
\title{Bootstrap confidence intervals}
\usage{
int_pctl(.data, statistics, alpha = 0.05)

int_t(.data, statistics, alpha = 0.05)

int_bca(.data, statistics, alpha = 0.05, .fn, ...)
}
\arguments{
\item{.data}{A data frame containing the bootstrap resamples created using
\code{bootstraps()}. For t- and BCa-intervals, the \code{apparent} argument
should be set to \code{TRUE}. Even if the \code{apparent} argument is set to
\code{TRUE} for the percentile method, the apparent data is never used in calculating
the percentile confidence interval.}

\item{statistics}{An unquoted column name or \code{dplyr} selector that identifies
a single column in the data set that contains the indiviual bootstrap
estimates. This can be a list column of tidy tibbles (that contains columns
\code{term} and \code{estimate}) or a simple numeric column. For t-intervals, a
standard tidy column (usually called \code{std.err}) is required.
See the examples below.}

\item{alpha}{Level of significance}

\item{.fn}{A function to calculate statistic of interest. The
function should take an \code{rsplit} as the first argument and the \code{...} are
required.}

\item{...}{Arguments to pass to \code{.fn}.}
}
\value{
Each function returns a tibble with columns \code{.lower},
\code{.estimate}, \code{.upper}, \code{.alpha}, \code{.method}, and \code{term}.
\code{.method} is the type of interval (eg. "percentile",
"student-t", or "BCa"). \code{term} is the name of the estimate. Note
the \code{.estimate} returned from \code{int_pctl()}
is the mean of the estimates from the bootstrap resamples
and not the estimate from the apparent model.
}
\description{
Calculate bootstrap confidence intervals using various methods.
}
\details{
Percentile intervals are the standard method of
obtaining confidence intervals but require thousands of
resamples to be accurate. T-intervals may need fewer
resamples but require a corresponding variance estimate.
Bias-corrected and accelerated intervals require the original function
that was used to create the statistics of interest and are
computationally taxing.
}
\examples{
\if{html}{\out{<div class="r">}}\preformatted{library(broom)
library(dplyr)
}\if{html}{\out{</div>}}\preformatted{## 
## Attaching package: 'dplyr'

## The following objects are masked from 'package:stats':
## 
##     filter, lag

## The following objects are masked from 'package:base':
## 
##     intersect, setdiff, setequal, union
}\if{html}{\out{<div class="r">}}\preformatted{library(purrr)
library(tibble)

lm_est <- function(split, ...) \{
  lm(mpg ~ disp + hp, data = analysis(split)) \%>\%
    tidy()
\}

set.seed(52156)
car_rs <-
  bootstraps(mtcars, 5000, apparent = TRUE) \%>\%
  mutate(results = map(splits, lm_est))

int_pctl(car_rs, results)
}\if{html}{\out{</div>}}\preformatted{## # A tibble: 3 x 6
##   term         .lower .estimate   .upper .alpha .method   
##   <chr>         <dbl>     <dbl>    <dbl>  <dbl> <chr>     
## 1 (Intercept) 27.7      30.8    33.6       0.05 percentile
## 2 disp        -0.0439   -0.0295 -0.0136    0.05 percentile
## 3 hp          -0.0599   -0.0272 -0.00741   0.05 percentile
}\if{html}{\out{<div class="r">}}\preformatted{int_t(car_rs, results)
}\if{html}{\out{</div>}}\preformatted{## # A tibble: 3 x 6
##   term         .lower .estimate    .upper .alpha .method  
##   <chr>         <dbl>     <dbl>     <dbl>  <dbl> <chr>    
## 1 (Intercept) 28.0      30.8    34.3        0.05 student-t
## 2 disp        -0.0464   -0.0295 -0.0172     0.05 student-t
## 3 hp          -0.0458   -0.0272 -0.000643   0.05 student-t
}\if{html}{\out{<div class="r">}}\preformatted{int_bca(car_rs, results, .fn = lm_est)
}\if{html}{\out{</div>}}\preformatted{## # A tibble: 3 x 6
##   term         .lower .estimate   .upper .alpha .method
##   <chr>         <dbl>     <dbl>    <dbl>  <dbl> <chr>  
## 1 (Intercept) 27.8      30.8    33.7       0.05 BCa    
## 2 disp        -0.0455   -0.0295 -0.0148    0.05 BCa    
## 3 hp          -0.0561   -0.0272 -0.00502   0.05 BCa
}\if{html}{\out{<div class="r">}}\preformatted{# putting results into a tidy format
rank_corr <- function(split) \{
  dat <- analysis(split)
  tibble(
    term = "corr",
    estimate = cor(dat$Sepal.Length, dat$Sepal.Width, method = "spearman"),
    # don't know the analytical std.err so no t-intervals
    std.err = NA_real_
  )
\}

set.seed(69325)
bootstraps(iris, 5000, apparent = TRUE) \%>\%
  mutate(correlations = map(splits, rank_corr)) \%>\%
  int_pctl(correlations)
}\if{html}{\out{</div>}}\preformatted{## # A tibble: 1 x 6
##   term  .lower .estimate  .upper .alpha .method   
##   <chr>  <dbl>     <dbl>   <dbl>  <dbl> <chr>     
## 1 corr  -0.309    -0.165 -0.0142   0.05 percentile
}
}
\references{
Davison, A., & Hinkley, D. (1997). \emph{Bootstrap Methods and their
Application}. Cambridge: Cambridge University Press.
doi:10.1017/CBO9780511802843

\url{https://tidymodels.github.io/rsample/articles/Applications/Intervals.html}
}
